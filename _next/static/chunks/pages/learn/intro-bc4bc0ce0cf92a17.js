(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[740],{7710:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/learn/intro",function(){return o(6587)}])},6587:function(e,t,o){"use strict";o.r(t),o.d(t,{__toc:function(){return a}});var n=o(651),i=o(8839),s=o(7828);let a=[{depth:2,value:"Summary",id:"summary"},{depth:2,value:"Why Green Boost?",id:"why-green-boost"},{depth:2,value:"Does Green Boost Fit Every Use Case?",id:"does-green-boost-fit-every-use-case"},{depth:2,value:"Toolkit",id:"toolkit"},{depth:2,value:"Module Topics",id:"module-topics"}];function r(e){let t=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",code:"code"},(0,s.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:"Introduction"}),"\n",(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"The purpose of this training is to bring you up to speed with Green Boost (GB), a toolkit to build full stack cloud native web apps faster on AWS. Module 1 takes you through deploying a GB web app with the GB CLI. Then, subsequent modules dive deep into various aspects of your GB App including: infrastructure, frontend, backend, tooling, and clean code architecture."}),"\n",(0,n.jsx)(t.h2,{id:"why-green-boost",children:"Why Green Boost?"}),"\n",(0,n.jsxs)(t.p,{children:["GB was built to speed up ",(0,n.jsx)(t.a,{href:"https://aws.amazon.com/professional-services/",children:"AWS Professional Services"})," delivery of web apps to customers. Many web apps have similar needs when it comes to setting up a repository, authentication, user management, CI/CD pipelines, etc. GB's goal is provide the undifferentiated heavy lifting in these common areas. To do this, GB provides an opinionated way to build these common web app components."]}),"\n",(0,n.jsx)(t.h2,{id:"does-green-boost-fit-every-use-case",children:"Does Green Boost Fit Every Use Case?"}),"\n",(0,n.jsxs)(t.p,{children:["GB is not for all use cases. Some customers have technology requirements that are not compatible with GB. That's ok. To achieve higher development speeds, GB makes assumptions about what technologies are used. Similar to how AWS recommends enterprise customers go all-in on AWS to leverage features higher up the stack that result in faster development instead of the“multi-cloud approach that restricts customers to build with the lowest common denominator of the cloud (containers, k8s, etc.), so GB recommends building with prescribed technologies. However, if a customer has a strong opinion on one part of the stack, then you still may be able to build with GB. For example, although GB uses React, a customer could use Angular or Vue instead but they would not be able to leverage GB's UI component library, ",(0,n.jsx)(t.code,{children:"gboost-ui"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"toolkit",children:"Toolkit"}),"\n",(0,n.jsx)(t.p,{children:"GB is a toolkit that leverages several key technologies including: TypeScript, React, AWS Cloud Development Kit (CDK), and Node.js. GB also uses other 3rd party open source tools/libraries/frameworks to help build web apps that delight customers with their quality and speed. The benefits of using 3rd party open source tools are new features and bug fixes by the community, community support (StackOverflow Q&As), and lighter maintenance burden on the GB team. 3rd party tools also have risks being maintained by another individual/organization. It's a tradeoff the GB team tries to carefully navigate. With that said, GB is not only an ad-hoc tool. The GB CLI generates a full stack web app for you which you'll do in the first training module."}),"\n",(0,n.jsx)(t.h2,{id:"module-topics",children:"Module Topics"}),"\n",(0,n.jsx)(t.p,{children:"You may scan through this training and think, “Wait, what is GB actually doing?” This training intentionally doesn't dive into constructs, components, and functions exported from GB's libraries. Instead it focuses on the tools GB apps are built with so you'll have a more holistic, over-arching understanding of how to deliver a GB app. In the future, additional trainings will cover those libraries more in depth."})]})}t.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.a)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)},pageOpts:{filePath:"src/pages/learn/intro.mdx",route:"/learn/intro",timestamp:1726669661e3,title:"Introduction",headings:a},pageNextRoute:"/learn/intro"})}},function(e){e.O(0,[839,888,774,179],function(){return e(e.s=7710)}),_N_E=e.O()}]);
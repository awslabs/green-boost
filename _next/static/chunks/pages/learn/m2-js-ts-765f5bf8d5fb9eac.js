(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[948],{9082:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/learn/m2-js-ts",function(){return n(4337)}])},4337:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return i}});var s=n(5250),r=n(6393),a=n(2520);let i=[{depth:2,value:"Learn",id:"learn"},{depth:2,value:"Apply",id:"apply"},{depth:3,value:"M2.1 - Create Use Case",id:"m21---create-use-case"},{depth:3,value:"M2.2 - Test Function",id:"m22---test-function"},{depth:3,value:"M2.3 - Debug Line-By-Line",id:"m23---debug-line-by-line"},{depth:3,value:"M2.4 - Other Use Cases",id:"m24---other-use-cases"},{depth:3,value:"M2.5 - Bulk Import",id:"m25---bulk-import"}];function o(e){let t=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",a:"a",h3:"h3",code:"code",span:"span"},(0,a.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{children:"Module 2: JavaScript/TypeScript"}),"\n",(0,s.jsx)(t.p,{children:"Green Boost uses TypeScript (TS) on the frontend, backend, and to define your infrastructure. The better you know TS, the better you'll be able to navigate each layer of your full stack web apps."}),"\n",(0,s.jsx)(t.h2,{id:"learn",children:"Learn"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["JavaScript: read/scan the ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide",children:"MDN JavaScript Guide"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"TS is a superset of JavaScript (JS), so the better you know JS, the better you know TS."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["TypeScript: read the ",(0,s.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/intro.html",children:"TypeScript Handbook"})]}),"\n",(0,s.jsxs)(t.li,{children:["TypeScript Playground Examples: go to the ",(0,s.jsx)(t.a,{href:"https://www.typescriptlang.org/play",children:"TypeScript Playground"}),", click on the Examples tab, and read/tinker with the preset examples covering","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Primitives"}),"\n",(0,s.jsx)(t.li,{children:"Type Primitives"}),"\n",(0,s.jsx)(t.li,{children:"Meta-Types"}),"\n",(0,s.jsx)(t.li,{children:"Language"}),"\n",(0,s.jsx)(t.li,{children:"Language Extensions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"apply",children:"Apply"}),"\n",(0,s.jsxs)(t.p,{children:["You've been told that in addition to supporting an items table (which the template already has), you also need to support an albums table where a user can store their albums. To begin, you'll need to write use case functions to perform the basic create, read, update, and delete functions. These functions should be type-safe and performant. For now, you can use the ",(0,s.jsx)(t.a,{href:"https://jsonplaceholder.typicode.com/",children:"JSONPlaceholder API"}),' to mock your DB calls with the fake "',(0,s.jsx)(t.a,{href:"https://jsonplaceholder.typicode.com/albums",children:"https://jsonplaceholder.typicode.com/albums"}),'" resource. See guide ',(0,s.jsx)(t.a,{href:"https://jsonplaceholder.typicode.com/guide/",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"m21---create-use-case",children:"M2.1 - Create Use Case"}),"\n",(0,s.jsxs)(t.p,{children:["Write a ",(0,s.jsx)(t.code,{children:"core/src/modules/albums/create-album.usecase.ts"})," file that creates an album. Albums have a ",(0,s.jsx)(t.code,{children:"userId"}),", ",(0,s.jsx)(t.code,{children:"id"}),", and ",(0,s.jsx)(t.code,{children:"title"}),". Ensure the ",(0,s.jsx)(t.code,{children:"userId"})," and ",(0,s.jsx)(t.code,{children:"id"})," are integers and the ",(0,s.jsx)(t.code,{children:"title"})," is no longer than 100 characters. Additionally, you must ensure the user exists before creating the album."]}),"\n",(0,s.jsx)(t.h3,{id:"m22---test-function",children:"M2.2 - Test Function"}),"\n",(0,s.jsxs)(t.p,{children:["Now test your function. Create a temporary file at ",(0,s.jsx)(t.code,{children:"core/src/modules/albums/test.ts"}),". Import the function you created in the last step, then run ",(0,s.jsx)(t.code,{children:"pnpm tsx src/modules/albums/test.ts"})," with your current working directory as ",(0,s.jsx)(t.code,{children:"core/"}),". Ensure you're logging the response of the JSONPlaceholder API to ensure a \"successful\" creation (the API responds like you successfully created the resource even though it isn't actually created)."]}),"\n",(0,s.jsx)(t.h3,{id:"m23---debug-line-by-line",children:"M2.3 - Debug Line-By-Line"}),"\n",(0,s.jsxs)(t.p,{children:["Test your function with an invalid input, ensure the function throws an error with line-by-line debugging. To do this, set a ",(0,s.jsx)(t.a,{href:"https://code.visualstudio.com/docs/editor/debugging#_breakpoints",children:"breakpoint"})," on the line you want to begin line-by-line debugging with and then run your ",(0,s.jsx)(t.code,{children:"pnpm tsx ..."})," command within VS Code's ",(0,s.jsx)(t.a,{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_javascript-debug-terminal",children:"JavaScript Debug Terminal"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"m24---other-use-cases",children:"M2.4 - Other Use Cases"}),"\n",(0,s.jsxs)(t.p,{children:["Create functions in a similar manner that read, update, and delete albums and then test them. Don't worry about organizing your code in a clean code architecture format like ",(0,s.jsx)(t.code,{children:"core/src/modules/item/**"}),", we'll refactor this code in ",(0,s.jsx)(t.a,{href:"./m7-clean-code",children:"module 7"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"m25---bulk-import",children:"M2.5 - Bulk Import"}),"\n",(0,s.jsxs)(t.p,{children:["Now you've been tasked to create a use case function that bulk imports or creates albums. This function will accept an array of objects. The JSONPlaceholder API doesn't have a bulk create API, so you'll need to make individual requests. Make sure this function is performant by ",(0,s.jsx)(t.span,{"data-rehype-pretty-code-fragment":"",children:(0,s.jsx)(t.code,{"data-language":"ts","data-theme":"default",children:(0,s.jsx)(t.span,{className:"line",children:(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"await"})})})}),"ing in parallel rather than serially."]})]})}t.default=(0,r.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,a.a)(),e.components);return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)},pageOpts:{filePath:"src/pages/learn/m2-js-ts.mdx",route:"/learn/m2-js-ts",title:"Module 2: JavaScript/TypeScript",headings:i},pageNextRoute:"/learn/m2-js-ts"})}},function(e){e.O(0,[393,774,888,179],function(){return e(e.s=9082)}),_N_E=e.O()}]);